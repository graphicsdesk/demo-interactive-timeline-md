{"version":3,"sources":["scripts/script_calendar.js"],"names":["width","height","vbWidth","vbHeight","vbMinX","vbMinY","main","d3","select","scrolly","sticky","article","step","selectAll","monthNames","daysOfWeek","events","date","Date","label","segment","annotation","target","link","document","body","clientWidth","window","innerHeight","svg","attr","style","cellSize","Math","min","wrap","text","each","word","words","split","reverse","line","lineNumber","x","y","tspan","append","dy","pop","push","join","node","getComputedTextLength","makeCalendar","month","year","firstDay","getDay","daysInMonth","getDate","calendarGroup","classed","data","enter","d","i","range","floor","forEach","event","getUTCMonth","getUTCFullYear","day","getUTCDate","months","currentMonthIndex","scroller","scrollama","handleStepEnter","response","direction","stepFunctionsDown","index","stepFunctionsUp","console","log","handleStepExit","transitionToMonth","setupCalendars","remove","addAnnotation","targetDate","message","monthIndex","getTotalLength","transition","duration","on","call","setup","highlightDateRange","length","transitionToMonthUp","steps","init","offset","debug","onStepEnter","onStepExit","addEventListener","resize","id","startDate","endDate","currentDate","dayCellId","finalsWeekend","includes","setUTCDate","newMonthIndex","currentCalendar","newCalendar","verticalOffset"],"mappings":"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","file":"script_calendar.027d29ae.js","sourceRoot":"../src","sourcesContent":["let width, height;\nlet vbWidth, vbHeight;\nconst vbMinX = 0;\nconst vbMinY = 0;\n\n// using d3 for convenience\nvar main = d3.select('main');\nvar scrolly = main.select('#scrolly');\nvar sticky = scrolly.select('#sticky-thing');\nvar article = scrolly.select('article');\nvar step = article.selectAll('.step');\n  \n\n\n// create list of month names and days of the week (js stores these as numbers that correspond to the index of the following lists)\nconst monthNames = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n];\nconst daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n\n// data\n    const events = [\n        {date: new Date('2024-08-25'), label: 'First day of NSOP', segment: 'start',  annotation: \"Barnard starts NSOP here\", target:  new Date(2024, 7, 28)},\n        {date: new Date('2024-09-01'), label: 'End of NSOP', segment: 'end'},\n        {date: new Date('2024-09-03'), label: 'First day of class', segment: 'start', link: 'https://cloudfront-us-east-1.images.arcpublishing.com/spectator/SXKBMSVSGRG33IB2XATXOLRLD4.png'},\n        {date: new Date('2024-09-13'), label: 'End of shopping period', segment: 'end', link: 'https://cloudfront-us-east-1.images.arcpublishing.com/spectator/BKWCFTETX5D3XFUR2KICPMFP4E.png'},\n        {date: new Date('2024-10-08'), label: 'Last day to drop classes', segment: 'na'},\n        {date: new Date('2024-10-17'), label: 'Fall midterm date', segment: 'na', link: 'https://cloudfront-us-east-1.images.arcpublishing.com/spectator/WBKEKOAX3BED3LR7466RLHXJKY.png'},\n        {date: new Date('2024-10-25'), label: 'Start Homcoming and family days', segment:'start'},\n        {date: new Date('2024-10-26'), label: 'Homecoming game', segment: 'na', link: 'https://cloudfront-us-east-1.images.arcpublishing.com/spectator/MOBF27JBSRCKHNWURS4M24G2T4.png'},\n        {date: new Date('2024-11-04'), label: 'Start of election holiday', segment: 'start', link: 'https://cloudfront-us-east-1.images.arcpublishing.com/spectator/DQGZ4DEU4NGK5APJB4KP3MENY4.png'},\n        {date: new Date('2024-11-05'), label: 'End of election holiday', segment: 'end'},\n        {date: new Date('2024-11-14'), label: 'Last day to withdraw/PDF', segment: 'na', annotation: \"Last day to drop classes for SEAS students\", target:  new Date(2024, 10, 15)},// for some reason, this only works if i say the 15th. idk why\n        {date: new Date('2024-11-18'), label: 'Start registration', segment: 'start'},\n        {date: new Date('2024-11-22'), label: 'End registration', segment: 'end'},\n        {date: new Date('2024-11-27'), label: 'Start of Thanksgiving break', segment: 'start', link: 'https://cloudfront-us-east-1.images.arcpublishing.com/spectator/IYOOWB5KB5BXJKSKIMHAZIVWNA.png'},\n        {date: new Date('2024-11-29'), label: 'End of Thanksgiving break', segment: 'end'},\n        {date: new Date('2024-12-09'), label: 'Last day of class', segment: 'na', link: 'https://cloudfront-us-east-1.images.arcpublishing.com/spectator/Y256NHNJ6FFSZLZ2ZULRUQI3DE.png'},\n        {date: new Date('2024-12-10'), label: 'Start of reading period', segment: 'start', link: 'https://cloudfront-us-east-1.images.arcpublishing.com/spectator/YUYOAPVRPFHIRFQ75CTARUZVNE.png'},\n        {date: new Date('2024-12-12'), label: 'End of reading period', segment: 'end'},\n        {date: new Date('2024-12-13'), label: 'Start of finals', segment: 'start'},\n        {date: new Date('2024-12-20'), label: 'End of finals', segment: 'end'}\n    ];\n\nwidth = document.body.clientWidth;\nheight = window.innerHeight;\n\n// Create the SVG container\nconst svg = d3.select('svg')\n.attr('width', width)\n.attr('height', height)\n.style(\"display\", \"block\") // this and the margin thing should help to center the svg? maybe unnecessary\n.style(\"margin\", \"auto\")\n.attr('viewBox', `0 0 ${width} ${height}`);\n\n\n// Set size of calendar boxes/cells\nconst cellSize = Math.min(width / 7, height / 8); // choose whichever is smallest so all rows and columns fit in the viewbox\n\n\n// Some important functions //\n\n // Function for text wrapping (https://stackoverflow.com/questions/24784302/wrapping-text-in-d3) \n    function wrap(text, width) {\n      text.each(function () {\n          var text = d3.select(this),\n              words = text.text().split(/\\s+/).reverse(),\n              word,\n              line = [],\n              lineNumber = 0,\n              lineHeight = 1.1, // ems\n              x = text.attr(\"x\"),\n              y = text.attr(\"y\"),\n              dy = -1, \n              tspan = text.text(null)\n                          .append(\"tspan\")\n                          .attr(\"x\", x)\n                          .attr(\"y\", y)\n                          .attr(\"dy\", dy + \"em\");\n          while (word = words.pop()) {\n              line.push(word);\n              tspan.text(line.join(\" \"));\n              if (tspan.node().getComputedTextLength() > width) {\n                  line.pop();\n                  tspan.text(line.join(\" \"));\n                  line = [word];\n                  tspan = text.append(\"tspan\")\n                              .attr(\"x\", x)\n                              .attr(\"y\", y)\n                              .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\n                              .text(word);\n              }\n          }\n      });\n  }\n\n\nfunction makeCalendar(month,year) {\n  const firstDay = new Date(year, month, 1).getDay(); // day of the week for the 1st of the month\n  const daysInMonth = new Date(year, month + 1, 0).getDate(); // # of days in the month\n\n  //console.log(firstDay);\n\n  const calendarGroup = svg.append('g') // Append new group for each month's calendar\n      .attr('class', `calendar-month-${month}`)\n      .attr('transform', `translate(${width}, 0)`); // Start off-screen\n\n\n  // add month label\n  calendarGroup.append(\"text\")\n    .attr(\"x\", width / 2)\n    .attr(\"y\", cellSize / 2)\n    .attr(\"text-anchor\", \"middle\")\n    .text(monthNames[month] + \" \" + year)\n    .style(\"font-weight\", \"bold\")\n    .style(\"font-size\", \"16px\")\n    .classed('roboto-bold', true); // make sure to add roboto classes to styles in the html\n\n  // add day of week headers\n  calendarGroup.selectAll(\".header\")\n  .data(daysOfWeek)\n  .enter().append(\"text\")\n  .attr(\"x\", (d, i) => i * cellSize + cellSize / 2 + (width-(cellSize*7))/2)\n  .attr(\"y\", cellSize )\n  .attr(\"text-anchor\", \"middle\")\n  .text(d => d)\n  .classed('roboto',true);\n\n\n  // add boxes for days\n  calendarGroup.selectAll(\"rect\")\n  .data(d3.range(daysInMonth))\n  .enter().append(\"rect\")\n  .attr(\"x\", (d, i) => ((i + firstDay) % 7) * cellSize + (width-(cellSize*7))/2)\n  .attr(\"y\", d => Math.floor((d + firstDay) / 7) * cellSize + cellSize + 20)\n  .attr(\"width\", cellSize)\n  .attr(\"height\", cellSize)\n  .attr(\"fill\", \"#fff\")\n  .attr(\"stroke\", \"#ddd\")\n  .attr('id', d => `day-${month + 1}-${d + 1}`); // give them an id for selection later\n\n\n  // add date numbers\n  calendarGroup.selectAll(\".day\")\n    .data(d3.range(daysInMonth))\n    .enter().append(\"text\")\n    .attr(\"x\", (d, i) => ((i + firstDay) % 7) * cellSize + cellSize / 2 + (width-(cellSize*7))/2)\n    .attr(\"y\", d => Math.floor((d + firstDay) / 7) * cellSize + cellSize + 35)\n    .attr(\"text-anchor\", \"middle\")\n    .classed('roboto-light',true)\n    .text(d => d + 1)\n    .style(\"font-size\", \"14px\");\n\n  // add images to dates with illos\n  events.forEach(event => {\n    if (event.date.getUTCMonth() === month && event.date.getUTCFullYear() === year) {\n        const day = event.date.getUTCDate();\n        const x = ((day + firstDay - 1) % 7) * cellSize + cellSize / 2 + (width-(cellSize*7))/2;\n        const y = Math.floor((day + firstDay - 1) / 7) * cellSize + cellSize +  cellSize*.8;\n        \n        if (event.link) {\n          calendarGroup.append(\"image\")\n                .attr(\"xlink:href\", event.link)\n                .attr(\"x\", x - (cellSize/2))\n                .attr(\"y\", y - (cellSize/2))\n                .attr(\"width\", (cellSize))\n                .attr(\"height\", (cellSize))\n                .attr('id', (d,i) => `image-${i}`);\n        }\n    }\n  });\n\n\n\n}\n\nconst months = [7,8, 9, 10, 11]; // list of months on the cal - August to December\nconst year = 2024;\n\n\nlet currentMonthIndex = months[0];\n\n\n// scrolly stuff \n\nvar scroller = scrollama();\n\n  \n    \nfunction handleStepEnter(response) {\n    if(response.direction=='down') {\n          // Call the appropriate step function based on the scroll index\n    stepFunctionsDown[response.index]();\n    }\n    else if(response.direction=='up') {\n        stepFunctionsUp[response.index]();\n    }\n    // Update the sticky element's class\n    sticky.attr('class', 'step-' + response.index);\n    console.log('index',response.index);\n    return response;\n    \n}\n\nfunction handleStepExit(response) {\n    if (response.index == 0 && response.direction == 'up') {\n      \n        // Initially display the first month\n  transitionToMonth(months[0]);\n\n    }\n}\n\nfunction setupCalendars() {\n  svg.selectAll(\".calendar-month\").remove(); \n\n  // Create calendars for all months\n  months.forEach((month) => {\n    makeCalendar(month, year);\n  });\n\n  // make sure the first month (aug) is visible initially\n  transitionToMonth(months[0]);\n  \n}\n\n// Add annotations\n\n// stuff for making arrowhead\nsvg.append('defs')\n  .append('marker')\n  .attr('id', 'arrowhead')\n  .attr('viewBox', '0 0 10 10')\n  .attr('refX', 9) \n  .attr('refY', 5)\n  .attr('markerWidth', 5)\n  .attr('markerHeight', 5)\n  .attr('orient', 'auto-start-reverse') // set orientation of arrow\n  .append('path')\n  .attr('d', 'M 0 0 L 10 5 L 0 10 z') // arrowhead shape\n  .attr('fill', 'black');\n\n\nfunction addAnnotation(targetDate,message) {\n\n  const day = targetDate.getUTCDate();\n  const monthIndex = targetDate.getUTCMonth();\n  \n  // Get the calendar group for the month of the annotation\n  const calendarGroup = svg.select(`.calendar-month-${monthIndex}`);\n  \n  // Calculate position\n  const x = ((day + 2) % 7) * cellSize + cellSize / 2 + (width - (cellSize * 7)) / 2;\n  const y = Math.floor((day + 1 + 0) / 7) * cellSize + cellSize + cellSize/2;\n  // this is kind of hacky. probably a betterv way to do this ^\n\n  // Add curved arrow\n  calendarGroup.append(\"path\")\n      .attr(\"d\", `M${x+cellSize/4} ${y-cellSize/2} Q${x + cellSize/1.7} ${y + cellSize/2} ${x + cellSize} ${y}`)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", 2)\n      .classed('annotation-arrow',true)\n      .style('opacity','100')\n      .classed('annotation',true)\n      // stuff for drawing the line:\n      .attr(\"stroke-dasharray\", function() {\n        return this.getTotalLength(); // Set the dash array to the length of the path\n    })\n    .attr(\"stroke-dashoffset\", function() {\n        return this.getTotalLength(); \n    })\n    .transition()\n    .duration(500)  \n    .attr(\"stroke-dashoffset\", 0)\n    .on(\"end\", function() { // add the arrowhead when line is done being drawn\n      d3.select(this).attr('marker-end', 'url(#arrowhead)')\n    });  \n      \n  \n  // add annotationtext\n  calendarGroup.append(\"text\")\n      .attr(\"x\",x+cellSize/8)\n      .attr(\"y\", y-cellSize/1.8)\n      .text(`${message}`)\n      .style('opacity','100')\n      .style(\"font-size\", \"14px\")\n      .attr('text-anchor','middle')\n      .style(\"fill\", \"black\")\n      .classed('annotation',true)\n      .classed('roboto',true)\n      .call(wrap,cellSize*3) // wrap if text is longer than 3 * cell size\n    ;\n}\n\nfunction setup() {\n  setupCalendars();\n\n  // Initially display the first month\n  transitionToMonth(months[0]);\n  \n  \n}\n\nfunction setupCalendars() {\n  svg.selectAll(\".calendar-month\").remove(); // Clear existing calendars if any\n  months.forEach(month => makeCalendar(month, year));\n  transitionToMonth(months[0]);\n}\n\n\n// populate stepFunctions\nvar stepFunctionsDown = [];\n\nfor (let i =0; i < events.length+2;i++) {\n  \n  stepFunctionsDown.push(function() {\n\n    const monthIndex = events[i].date.getUTCMonth(); // 0-based index\n    transitionToMonth(monthIndex);\n\n    // highlight active events\n    svg.select(`.event-${i}`)\n    .transition()\n    .duration(1000)\n    .style('fill','#75aadb')\n\n\n    // fade out  old events\n    if(events[i].segment !== 'end') { \n      svg.selectAll(`.event-${i-1}`).transition()\n      .duration(1000)\n      .style('fill','white');\n      svg.selectAll(`.event-${i-2}`).transition()\n      .duration(1000)\n      .style('fill','white');\n    }\n\n    // highlight multiple dates (for segment)\n    if(events[i].segment == 'start') {\n      const startDate = events[i].date;\n      const endDate = events[i+1].date;\n      highlightDateRange(startDate, endDate);\n  \n    }\n\n    // add annotation\n    if(events[i].annotation) {\n      const targetDate = events[i].target;\n      const message = events[i].annotation;\n      addAnnotation(targetDate,message);\n\n    }\n    \n\n    });\n    \n}\n\n    \n\nvar stepFunctionsUp = [\n        \n        \n];\n\n\nfor (let i =0; i < events.length;i++) {\n  stepFunctionsUp.push(function() { \n   \n    // fade out annotations\n    svg.selectAll('.annotation') \n    .transition()\n    .duration(1000)\n    .style('opacity','0')\n    \n    svg.select(`.event-${i}`)\n    .transition()\n    .duration(1000)\n    .style('fill','#75aadb')\n\n\n    if(events[i].segment == 'start') {\n                \n      const startDate = events[i].date;\n      const endDate = events[i+1].date;\n\n      \n     highlightDateRange(startDate, endDate);\n \n        }\n\n\n    const monthIndex = events[i].date.getUTCMonth(); \n    transitionToMonthUp(monthIndex);\n    });\n\n    if(events[i].segment !== 'end') { \n      svg.selectAll(`.event-${i+1}`).transition()\n        .duration(1000)\n        .style('fill','white');\n        svg.selectAll(`.event-${i+2}`).transition()\n        .duration(1000)\n        .style('fill','white');\n      }\n             \n}\n\n    \n// Create scrollable sections\nconst steps = d3.select('#scroll-steps')\n    .selectAll('div')\n    .data(events)\n    .enter().append('div')\n    .attr('class', 'step')\n    .text(d => d.label);\n\n// Initialize scrollama\nfunction init() {\n    setup();\n    scroller\n      .setup({\n        step: '#scrolly article .step',\n        offset: 0.98,\n        debug: false,\n      })\n      .onStepEnter(handleStepEnter)\n      .onStepExit(handleStepExit);\n\n    // Setup resize event listener\n    window.addEventListener('resize', scroller.resize);\n}\n\n// Kick things off\ninit();\n\nfor (let i = 0; i < events.length; i++) {\n  const month = events[i].date.getUTCMonth() + 1; // Months are 0-based in JavaScript\n  const day = events[i].date.getUTCDate(); // Days are 1-based\n  const id = `${month}-${day}`;\n\n  svg.select(`#day-${id}`)\n  .classed(`event-${i}`, true);\n  \n}\n\n\n// function for highlighting range of dates \nfunction highlightDateRange(startDate, endDate) {\n  // Ensure startDate is before endDate\n  if (startDate > endDate) {\n    [startDate, endDate] = [endDate, startDate];\n  }\n\n\n\n  // Clear previous highlights\n  svg.selectAll('rect').transition()\n  .duration(1000)\n  .style('fill','white')\n  .on('end', function() {\n\n    // apply new highlights after previous ones are erased\n    let currentDate = new Date(startDate);\n    while (currentDate <= endDate) {\n      const month = currentDate.getUTCMonth() + 1;\n      const day = currentDate.getUTCDate();\n      const dayCellId = `day-${month}-${day}`;\n\n      const finalsWeekend = ['day-12-14', 'day-12-15']; // we don't want to highlight this\n \n      svg.select(`#${dayCellId}`)\n        .transition()\n        .duration(1000) // Duration for highlighting\n        .style('fill', function() {\n          // Determine the fill color based on the dayCellId\n          return finalsWeekend.includes(dayCellId) ? '#FFFFFF' : '#75aadb'; // White for specific days, default color for others\n      });\n\n      currentDate.setUTCDate(currentDate.getUTCDate() + 1);\n    }\n  });\n}\n\n\nfunction transitionToMonth(newMonthIndex) {\n  console.log(\"currentMonthIndex\", currentMonthIndex);\n  console.log(\"newMonthIndex\", newMonthIndex);\n\n    // If the new month is the same as the current month, do nothing\n    if (currentMonthIndex === newMonthIndex) {\n      // Ensure the new month is visible\n      svg.select(`.calendar-month-${newMonthIndex}`)\n        .style('display', 'block')\n        .attr('transform', 'translate(0, 0)'); // Make sure it's positioned correctly\n      return;\n    }\n\n  const currentCalendar = svg.select(`.calendar-month-${currentMonthIndex}`);\n  const newCalendar = svg.select(`.calendar-month-${newMonthIndex}`);\n\n  // Calculate the vertical offset for the transition\n  const verticalOffset = height; // This should be the height of the calendar container\n\n  // Move the current month off-screen (upwards)\n  currentCalendar\n    .transition()\n    .duration(1000)\n    .attr('transform', `translate(0, ${verticalOffset})`)\n    .on('end', function() {\n      // After the transition, hide the old calendar\n      currentCalendar.style('display', 'none');\n    });\n\n  // Position the new month off-screen (downwards) and then slide it into view\n  newCalendar\n    .attr('transform', `translate(0, ${-verticalOffset})`) // Start off-screen\n    .style('display', 'block') // Ensure the new calendar is visible\n    .transition()\n    .duration(1000)\n    .attr('transform', 'translate(0, 0)'); // Slide into view\n\n  // update current month index\n  currentMonthIndex = newMonthIndex;\n}\n\n\nfunction transitionToMonthUp(newMonthIndex) {\n  console.log(\"currentMonthIndex\", currentMonthIndex);\n  console.log(\"newMonthIndex\", newMonthIndex);\n\n  if (currentMonthIndex === newMonthIndex) return; // No need to transition if the month is the same\n\n  const currentCalendar = svg.select(`.calendar-month-${currentMonthIndex}`);\n  const newCalendar = svg.select(`.calendar-month-${newMonthIndex}`);\n\n  // Calculate the vertical offset for the transition\n  const verticalOffset = height; // This should be the height of the calendar container\n\n  // Move the current month off-screen (upwards)\n  currentCalendar\n    .transition()\n    .duration(1000)\n    .attr('transform', `translate(0, ${-verticalOffset})`)\n    .on('end', function() {\n      // After the transition, hide old calendar\n      currentCalendar.style('display', 'none');\n    });\n\n  // Position the new month off-screen (below the visible area), and then slide it into view\n  newCalendar\n    .attr('transform', `translate(0, ${verticalOffset})`) // Start off-screen (below the visible area)\n    .style('display', 'block') // make sure new calendar is visible\n    .transition()\n    .duration(1000)\n    .attr('transform', 'translate(0, 0)'); // Slide into view\n\n  // Update the current month index\n  currentMonthIndex = newMonthIndex;\n}\n"]}